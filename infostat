#!/bin/bash
## information bar 

## colors and  fonts
  . $HOME/bin/barconf

## glyphs
  glymem=""
  glyvol=""
  glymute=""
  glynote=""
  glylistn=""
  glypause=""
  glyplay=""
  glystop=""
  glychrg=""
  glybatt=""
  glybattlower=""
  glybattlow=""
  glybattmid=""
  glybatt34=""
  glybattclose=""
  glybattfull=""
  glybattalert=""
  glybattpanic=""
  #glyalert=""
  glyclock=""
  glycal=""
  glywifi=""
  glywifi2=""
  glywifi3=""
## extras
  SEP=" "
  SEP2="  "
  SEP4="    "
  SEP6="       "
  SEP8="        "
## information section
status() {
    memory() {
        mem=$(free -m | awk 'NR==2 {print $3}')
         echo %{F$RED}$glymem$SEP$mem$SEP%{F-}
    }
    bat() {
        level=$(cat /sys/class/power_supply/BAT0/capacity) 
        state=$(cat /sys/class/power_supply/BAT0/status)
        if [ $state = "Discharging" ] && [ $level -lt '25' ] ;then #&& [ $level -gt '14' ] ; then
            echo %{F$RED}$level" !"%{F-}
        else
            #echo $level 
            echo %{F$YLW}$level%{F-} 
        fi
	}
    batterystate () {
        state=$(cat /sys/class/power_supply/BAT0/status)
        lvl=$(cat /sys/class/power_supply/BAT0/capacity) 
        
        case $state in
            "Charging")
                current=%{F$GRN}$glychrg ;;
            "Discharging")
                if [ $lvl -lt '10' ]; then
                    current=%{F$RED}$glybattpanic
                elif [ $lvl -ge '10' ] && [ $lvl -lt '25' ]; then
                    current=%{F$RED}$glybattlower
                elif [ $lvl -ge '25' ] && [ $lvl -lt '50' ]; then
                    current=%{F$YLW}$glybattlow
                elif [ $lvl -ge '50' ] && [ $lvl -lt '75' ]; then
                    current=%{F$YLW}$glybattmid
                elif [ $lvl -ge '75' ] && [ $lvl -lt '90' ]; then
                    current=%{F$YLW}$glybatt34
                else
                    current=%{F$GRN}$glybattclose 
                fi ;;
            "Full")
                current=%{F$GRN}$glybattfull ;;
        esac
        echo $current%{F-}
    }
	clockdate() {
	    clockd=%{F$CYN}$glycal$(date +%{F$WHT}' %d   %b ''  '%{F$MAG}'  '$glyclock%{F$WHT}'  %R')
	   echo $clockd$SEP2
	  }
    clocktime() {
        clockt=$(date +%{F$RED}'  %R')
        echo $clockt
    }
    groups() {
       cur=$(xprop -root _NET_CURRENT_DESKTOP | awk '{print $3}')
       total=$(xprop -root _NET_NUMBER_OF_DESKTOPS | awk '{print $3}')
       case $cur in
           "0") dt="main" ;;
           "1") dt="web" ;;
           "2") dt="media" ;;
           "3") dt="misc" ;;
           "4") dt="else" ;;
           *)   dt= ;;
       esac
       echo $dt
    }
    tags() {
      herbstclient list_monitors | awk '{gsub(/"/," ");print $5}'
    }
	vol() {
        vol=$(amixer get Master|awk 'NR==5 {print $4}'|cut -d '%' -f1 | cut -d '[' -f2) #sed -e 's/[//g') 
        mut=$(amixer get Master | awk 'NR==5 {print $6}')
        head=$(cat /proc/asound/card0/codec#0 | awk 'NR==143 {print $2}')
          # check if muted 
          if [ $mut == "[off]" ] ;then
              echo "%{F$MAG}$glymute$SEP"M"$SEP"
          # check for headphones 
          elif [ $head == "0x00:" ] ;then
              echo "%{F$MAG}$glylistn$SEP$vol$SEP"
          else
              echo "%{F$CYN}$glyvol$SEP$vol$SEP"
          fi
	}
    windowname() {
        name=$(xprop -id $(xprop -root _NET_ACTIVE_WINDOW | cut -d ' ' -f 5) _NET_WM_NAME | awk '{gsub(/"/," ");print $3,$4,$5,$6,$7}')
        if [ -z $name ]; then
            name=%{F$BBLK}"none " 
        else
            name=%{F$WHT}$name%{F-}
        fi
      # echo $title 
        echo %{+u}$SEP$name%{-u}
    }
    music() {
        ARTIST=$( cmus-remote -Q 2>/dev/null | grep "tag artist " | cut -d " " -f 3- )
        TITLE=$( cmus-remote -Q 2>/dev/null | grep title | cut -d " " -f 3- )
        STATE=$( cmus-remote -Q 2>/dev/null | grep status | cut -d " " -f 2- )

        if [ -z "$ARTIST" ] ;then
            ek="%{U$BBLK}%{+u}$glynote$SEP4---%{-u}"
        else
            case $STATE in
                "paused")  ek="%{F$YLW}%{F-}$SEP%{U$YLW}$SEP%{+u}$ARTIST%{-u}$SEP%{F$YLW}$SEP$glypause%{F-}" ;;
                "playing") ek="%{F$GRN}%{F-}$SEP%{U$GRN}$SEP%{+u}$ARTIST%{-u}$SEP%{F$GRN}$SEP$glyplay%{F-}" ;;
                "stopped") ek="%{F$RED}%{F-}$SEP%{U$RED}$SEP%{+u}$ARTIST%{-u}$SEP%{F$RED}$SEP$glystop%{F-}" ;;
            esac
        fi
        echo %{F$WHT}$SEP4$ek$SEP$gly$SEP
    }
    wireless() {
        # todo; check if exists 
        wifi=$(awk 'NR==3 {printf("%2.2d\n", ($3/70)*100)}' /proc/net/wireless)
            if [ $wifi -lt 70 ]; then
              strength=%{F$WHT}$glywifi3%{F$RED}$SEP2$wifi
            elif [ $wifi -ge 70 ] && [ $wifi -lt 90 ]; then
              strength=%{F$WHT}$glywifi2%{F$YLW}$SEP2$wifi
            else  
              strength=%{F$WHT}$glywifi%{F$GRN}$SEP2$wifi
            fi
        echo $strength 
    }
echo "$SEP6$(memory)$SEP2$(vol)$SEP2$(batterystate)$SEP$(bat)%{r}$(music)$SEP8$(wireless)$SEP4$(clockdate)$SEP6"
}
## populate and display
while true
do
  echo "$(status)"
  sleep 2 
done | bar -g $notifybar_g -u 3 -d -f $font,$glyph,$font2,$glyph2 -B $BG -F $WHT
